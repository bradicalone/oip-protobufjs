/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/light"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/light"));

})(this, function($protobuf) {
    "use strict";

    var $root = ($protobuf.roots["default"] || ($protobuf.roots["default"] = new $protobuf.Root()))
    .addJSON({
      oip5: {
        options: {
          go_package: "oip5"
        },
        nested: {
          OipFive: {
            fields: {
              recordTemplate: {
                type: "record.RecordTemplateProto",
                id: 1
              },
              record: {
                type: "RecordProto",
                id: 2
              },
              transfer: {
                type: "Transfer",
                id: 7
              },
              deactivate: {
                type: "Deactivate",
                id: 8
              },
              edit: {
                type: "Edit",
                id: 9
              }
            }
          },
          RecordProto: {
            fields: {
              tags: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              payment: {
                type: "Payment",
                id: 6
              },
              details: {
                type: "OipDetails",
                id: 7
              },
              permissions: {
                type: "Permissions",
                id: 8
              }
            }
          },
          OipDetails: {
            fields: {
              details: {
                rule: "repeated",
                type: "google.protobuf.Any",
                id: 1
              }
            }
          },
          Payment: {
            fields: {}
          },
          Permissions: {
            fields: {}
          },
          Transfer: {
            fields: {}
          },
          Deactivate: {
            fields: {}
          },
          Edit: {
            fields: {}
          },
          record: {
            options: {
              go_package: "oip5"
            },
            nested: {
              RecordTemplateProto: {
                fields: {
                  friendlyName: {
                    type: "string",
                    id: 1
                  },
                  description: {
                    type: "string",
                    id: 2
                  },
                  DescriptorSetProto: {
                    type: "bytes",
                    id: 4
                  },
                  identifier: {
                    type: "fixed64",
                    id: 10
                  },
                  recommended: {
                    rule: "repeated",
                    type: "fixed64",
                    id: 11
                  },
                  required: {
                    rule: "repeated",
                    type: "fixed64",
                    id: 12
                  }
                }
              }
            }
          }
        }
      },
      google: {
        nested: {
          protobuf: {
            nested: {
              Any: {
                fields: {
                  type_url: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "bytes",
                    id: 2
                  }
                }
              }
            }
          }
        }
      },
      oipProto: {
        options: {
          go_package: "oipProto"
        },
        nested: {
          SignedMessage: {
            fields: {
              SerializedMessage: {
                type: "bytes",
                id: 1
              },
              MessageType: {
                type: "MessageTypes",
                id: 2
              },
              SignatureType: {
                type: "SignatureTypes",
                id: 3
              },
              PubKey: {
                type: "bytes",
                id: 4
              },
              Signature: {
                type: "bytes",
                id: 5
              }
            }
          },
          MessageTypes: {
            values: {
              InvalidMessage: 0,
              OIP05: 1,
              Historian: 2,
              Multipart: 3
            }
          },
          SignatureTypes: {
            values: {
              InvalidSignature: 0,
              Flo: 1,
              Btc: 2,
              Rvn: 3,
              Tx: 4
            }
          }
        }
      }
    });

    return $root;
});
